(self.webpackChunkabcjs=self.webpackChunkabcjs||[]).push([[427],{7838:(t,e,s)=>{"use strict";s.r(e),s.d(e,{data:()=>a});const a={key:"v-4072f349",path:"/visual/classes.html",title:"Classes",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Class Names",slug:"class-names",children:[]},{level:2,title:"Test Tune",slug:"test-tune",children:[]},{level:2,title:"Found Classes",slug:"found-classes",children:[]},{level:2,title:"CSS Possibilities",slug:"css-possibilities",children:[{level:3,title:"changing colors",slug:"changing-colors",children:[]}]}],filePathRelative:"visual/classes.md",git:{updatedTime:1606850105e3,contributors:[{name:"Paul Rosen",email:"paul@paulrosen.net",commits:9}]}}},7582:(t,e,s)=>{"use strict";s.r(e),s.d(e,{default:()=>l});var a=s(6252);const d=(0,a.uE)('<h1 id="classes"><a class="header-anchor" href="#classes">#</a> Classes</h1><h2 id="class-names"><a class="header-anchor" href="#class-names">#</a> Class Names</h2><p>If you use, <code>{ add_classes: true }</code>, then the following classes are attached to various elements:</p><table><thead><tr><th>class</th><th>description</th></tr></thead><tbody><tr><td>abcjs-annotation</td><td>Text added with the <code>&quot;^...&quot;</code> format.</td></tr><tr><td>abcjs-author</td><td>The author text</td></tr><tr><td>abcjs-bar</td><td>The bar lines.</td></tr><tr><td>abcjs-bar-number</td><td>The bar numbers.</td></tr><tr><td>abcjs-beam-elem</td><td>The beams connecting eighth notes together.</td></tr><tr><td>abcjs-brace</td><td>The brace on the left side of the staff (like for piano music.)</td></tr><tr><td>abcjs-bracket</td><td>The bracket on the left side of the staff.</td></tr><tr><td>abcjs-chord</td><td>The chord symbols, specified in quotes.</td></tr><tr><td>abcjs-clef</td><td>All clefs</td></tr><tr><td>abcjs-composer</td><td>The composer text</td></tr><tr><td>abcjs-d0-25, etc.</td><td>The duration of the note. (Replace the dash with a decimal point. That is, the example is a duration of 0.25, or a quarter note.)</td></tr><tr><td>abcjs-decoration</td><td>Everything to do with the extra symbols, like crescendo.</td></tr><tr><td>abcjs-defined-text</td><td>Text that appears between the lines of music, created with <code>%%text</code>.</td></tr><tr><td>abcjs-dynamics</td><td>The dynamics markings: <code>p</code> for instance. Also the crescendo mark.</td></tr><tr><td>abcjs-end-m0-n0</td><td>Added to slurs to indicate the ending note.</td></tr><tr><td>abcjs-ending</td><td>The line and decoration for the 1st and 2nd ending.</td></tr><tr><td>abcjs-key-signature</td><td>All key signatures</td></tr><tr><td>abcjs-l0, abcjs-l1, etc.</td><td>(lower case L, followed by a number) The staff line number, starting at zero.</td></tr><tr><td>abcjs-ledger</td><td>ledger line.</td></tr><tr><td>abcjs-lyric</td><td>The lyric line.</td></tr><tr><td>abcjs-m0, abcjs-m1, etc.</td><td>The measure count from the START OF THE LINE.</td></tr><tr><td>abcjs-mm0, abcjs-mm1, etc.</td><td>The measure count from the START OF THE TUNE.</td></tr><tr><td>abcjs-meta-bottom</td><td>Everything that is printed after all the music.</td></tr><tr><td>abcjs-meta-top</td><td>Everything that is printed before the first staff line.</td></tr><tr><td>abcjs-n0, abcjs-n1, etc.</td><td>The note count from the START OF THE MEASURE.</td></tr><tr><td>abcjs-note</td><td>Everything to do with a note.</td></tr><tr><td>abcjs-note_selected</td><td>This is the element that the user has clicked on.</td></tr><tr><td>abcjs-p-1, abcjs-p1, etc.</td><td>The y-position of the note (where middle-C is zero).</td></tr><tr><td>abcjs-part</td><td>Each part marking in the music itself.</td></tr><tr><td>abcjs-part-order</td><td>The part order indicator at the top.</td></tr><tr><td>abcjs-rest</td><td>Everything to do with a rest.</td></tr><tr><td>abcjs-rhythm</td><td>The rhythm text.</td></tr><tr><td>abcjs-slur</td><td>Slurs and ties. (backwards compatible)</td></tr><tr><td>abcjs-start-m0-n0</td><td>Added to slurs to indicate the beginning note.</td></tr><tr><td>abcjs-tie</td><td>Tie.</td></tr><tr><td>abcjs-legato</td><td>Slur. Because &quot;abcjs-slur&quot; was historically used to indicate either a slur or a tie this indicates only a slur.</td></tr><tr><td>abcjs-staff</td><td>The horizontal lines that make up the staff.</td></tr><tr><td>abcjs-staff-extra</td><td>Clefs, key signatures, time signatures.</td></tr><tr><td>abcjs-stem</td><td></td></tr><tr><td>abcjs-subtitle</td><td>The subtitle, both on the top and inserted in the middle</td></tr><tr><td>abcjs-symbol</td><td>Any special symbol, like a trill.</td></tr><tr><td>abcjs-tempo</td><td>The tempo marking.</td></tr><tr><td>abcjs-text</td><td>Extra text that is not part of the music.</td></tr><tr><td>abcjs-time-signature</td><td>All time signatures</td></tr><tr><td>abcjs-title</td><td>The line specified by T:</td></tr><tr><td>abcjs-top-line</td><td>This marks the top line of each staff. This is useful if you are trying to find where on the page the music has been drawn.</td></tr><tr><td>abcjs-top-of-system</td><td>This marks the top of each set of staves. This is useful if you are trying to find where on the page the music has been drawn.</td></tr><tr><td>abcjs-triplet</td><td>The extra markings that indicate a triplet. (But not the notes themselves.)</td></tr><tr><td>abcjs-unaligned-words</td><td>Lyrics at the bottom that aren&#39;t lined up with notes.</td></tr><tr><td>abcjs-v0, abcjs-v1, etc.</td><td>the voice number, starting at zero.</td></tr></tbody></table><h2 id="test-tune"><a class="header-anchor" href="#test-tune">#</a> Test Tune</h2><p>Paste in any ABC you want here and see how that affects the classes below:</p>',6),r=(0,a.Wm)("h2",{id:"found-classes"},[(0,a.Wm)("a",{class:"header-anchor",href:"#found-classes"},"#"),(0,a.Uk)(" Found Classes")],-1),n=(0,a.Wm)("p",null,"Select the following classes to see what they point to. (They are ANDed together.)",-1),i=(0,a.uE)('<h2 id="css-possibilities"><a class="header-anchor" href="#css-possibilities">#</a> CSS Possibilities</h2><h3 id="changing-colors"><a class="header-anchor" href="#changing-colors">#</a> changing colors</h3><p>If you want to just change everything to one other color, you can do something like:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;style&gt;\n    svg {\n        fill: pink;\n        stroke: pink;\n    }\n&lt;style&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>If you want more control, you can use the classes. For instance, to turn only the horizontal staff lines pink, do this instead:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;style&gt;\n    svg .abcjs-staff {\n        fill: pink;\n        stroke: pink;\n    }\n&lt;style&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',6),l={mounted(){setTimeout((()=>{this.callbacks=[this.$refs.foundClasses]}),500)},data:()=>({callbacks:[]}),render:function(t,e,s,l,c,o){const h=(0,a.up)("example-tune-book"),b=(0,a.up)("found-classes");return(0,a.wg)(),(0,a.j4)(a.HY,null,[d,(0,a.Wm)(h,{callbacks:c.callbacks,"tune-id":32},null,8,["callbacks"]),r,n,(0,a.Wm)(b,{ref:"foundClasses",target:"#paper"},null,512),i],64)}}}}]);